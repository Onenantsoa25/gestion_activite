<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Rapport et récapitulatif d'activité{% endblock %}</title>
    <!-- Bootstrap CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
    <!-- Bootstrap Icons CDN (IMPORTANT pour les icônes du sidebar) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        /* Styles pour le corps et le padding pour le sidebar */
        body {
            padding-left: 280px; /* Largeur du sidebar */
            background-color: #F5F5F5; /* Couleur de fond gris très doux pour le contenu principal */
        }
        /* Pour la responsivité sur mobile, vous pourriez vouloir cacher le sidebar fixe et utiliser un offcanvas */
        @media (max-width: 767.98px) { /* Moins de 768px (taille md de Bootstrap) */
            body {
                padding-left: 0; /* Pas de padding sur mobile si le sidebar est un offcanvas */
            }
            .sidebar-fixed-desktop { /* Cache le sidebar fixe sur mobile */
                /* display: none !important; */
            }
        }

        /* Styles pour les cartes du tableau de bord */
        .card {
            border-radius: 12px; /* Bords plus arrondis */
            border: 1px solid #e0e0e0; /* Bordure subtile */
            box-shadow: 0 4px 15px rgba(0,0,0,0.08); /* Ombre plus douce et moderne */
        }

        /* Styles pour les en-têtes de tableau grisés */
        .table-header-gray {
            background-color: #e9ecef; /* Couleur grise claire de Bootstrap pour les en-têtes */
            vertical-align: middle; /* Alignement vertical au milieu */
            font-weight: 600; /* Un peu plus gras pour les en-têtes */
        }

        /* Styles pour le tableau avec bordures minimalistes et alignements */
        .table {
            border-collapse: collapse; /* Fusionne les bordures des cellules */
            margin-bottom: 0; /* Supprime la marge par défaut du tableau */
        }
        .table th,
        .table td {
            border: 1px solid #f0f0f0; /* Bordure très légère pour les cellules */
            padding: 0.5rem 1rem; /* Padding réduit pour une hauteur de ligne plus petite */
            vertical-align: middle; /* Alignement vertical par défaut */
        }
        /* Supprime la bordure supérieure de la première ligne du corps pour éviter les doubles bordures avec l'en-tête */
        .table tbody tr:first-child td {
            border-top: none;
        }

        /* Alignement spécifique pour la colonne Durée */
        .table .col-duree {
            text-align: right; /* Aligner les chiffres à droite */
            width: 80px; /* Largeur fixe pour la colonne durée */
            white-space: nowrap; /* Empêche le texte de passer à la ligne */
        }

        /* Styles pour les lignes de total */
        .table-total-row {
            font-weight: bold;
            background-color: #e9ecef; /* Même couleur que les en-têtes pour les totaux */
            border-top: 2px solid #dee2e6; /* Bordure supérieure plus prononcée pour séparer les totaux */
        }
        .table-total-row td {
            text-align: right; /* Aligner les totaux à droite */
            padding-top: 1rem; /* Plus d'espace au-dessus des totaux */
            padding-bottom: 1rem; /* Plus d'espace en dessous des totaux */
        }
        .table-total-row td:first-child {
            text-align: left; /* Le texte "total" ou "Total semaine" reste à gauche */
        }

        /* Ajustements pour la responsivité des filtres sur petits écrans */
        @media (max-width: 767.98px) {
            .filter-row-responsive {
                flex-direction: column; /* Empile les éléments verticalement */
                align-items: stretch !important; /* Étire les éléments pour prendre toute la largeur */
            }
            .filter-row-responsive > .col-auto {
                margin-bottom: 1rem; /* Ajoute un espacement vertical */
                width: 100%; /* Assure que les éléments prennent toute la largeur disponible */
            }
            .filter-row-responsive > .col-auto:last-child {
                margin-bottom: 0; /* Pas de marge en bas pour le dernier élément */
            }
            .filter-row-responsive > .ms-auto {
                margin-left: 0 !important; /* Supprime la marge auto sur petits écrans */
            }
        }

        .table {
            max-height: 400px;  /* Hauteur fixe ou maximale selon ton choix */
            overflow-y: auto;   /* Scroll vertical si contenu dépasse */
        }

    </style>
    {% block stylesheets %}{% endblock %}
</head>
<body>
    {# Inclusion directe du Sidebar #}
    <div class="sidebar-fixed-desktop col-md-4">
        {% include 'components/sidebar.html.twig' with {'active': 'rapports'} %}
    </div>

    <main class="container-fluid py-5 col-md-8"> {# Augmentation du padding vertical pour la page #}
        <h1 class="mb-5 text-center">Rapport et récapitulatif d'activité</h1> {# Marge plus grande sous le titre #}

        {# Section des filtres #}
        <div class="row mb-0">
            <div class="col-12 d-flex justify-content-center">
                <form class="d-flex flex-wrap align-items-center justify-content-center" action="/collaborateur/rapport" method="GET">
                    <div class="me-2 mb-2">
                        <label for="startDate" class="visually-hidden">Date de début</label>
                        <input type="date" class="form-control" id="startDate" name="debut" placeholder="Début">
                    </div>
                    <div class="me-2 mb-2 d-flex align-items-center">
                        <span class="text-muted">à</span>
                    </div>
                    <div class="me-2 mb-2">
                        <label for="endDate" class="visually-hidden">Date de fin</label>
                        <input type="date" class="form-control" id="endDate" name="fin" placeholder="Fin">
                    </div>
                    <div class="mb-2">
                        <button type="submit" class="btn btn-primary">Voir</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="row g-4">
            {# Section du tableau des rapports dans une carte #}
            <div class="col-md-12">
                <div class="card h-100">
                    <div class="card-body p-0">
                        <h5 class="card-title mb-3 px-4 pt-4 text-center">Détails du rapport</h5>
                        <div class="table-responsive" style="max-height: 477px;  overflow-y: auto; ">
                            <table class="table table-hover mb-0" >
                                <thead>
                                    <tr>
                                        <th scope="col" class="table-header-gray">Date</th>
                                        <th scope="col" class="table-header-gray">Tache</th>
                                        <th scope="col" class="table-header-gray">Activité du tache</th>
                                        <th scope="col" class="table-header-gray col-duree">Durée</th>
                                        <th scope="col" class="table-header-gray">Commentaire</th>
                                        <th scope="col" class="table-header-gray">Justificatif</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for groupe in taches.details %}
                                        {# Première ligne avec la date #}
                                        {% for tache in groupe.tache_terminee %}
                                            <tr>
                                                {% if loop.first or groupe.tache_terminee|length <= 1 %}
                                                    <td class="align-middle">{{ groupe.date }}</td>
                                                {% else  %}
                                                    <td class="align-middle">{{ groupe.date }}</td>
                                                {% endif %}
                                                <td class="align-middle">{{ tache.tache.tache }}</td>
                                                <td class="align-middle">{{ tache.tache.activite.activite }}</td>
                                                <td class="align-middle col-duree">{{ tache.tempsPasse }}</td>
                                                <td class="align-middle">{{ tache.commentaire }}</td>
                                                <td class="align-middle">
                                                    {% if tache.getJustificatif() %}
                                                        {# <a ="{{ path('api_tache_justificatif', { id: tache.id }) }}" 
                                                        class="btn btn-sm btn-outline-primary btn-download">
                                                        Télécharger {{tache.justificatif}}
                                                        </a>href #}
                                                        <button type="button" 
                                                                class="btn btn-sm btn-outline-primary btn-download" 
                                                                data-url="{{ path('api_tache_justificatif', { id: tache.id }) }}" 
                                                                data-filename="{{ tache.justificatif }}">
                                                            Télécharger
                                                        </button>
                                                    {% else %}
                                                        <span class="text-muted">Aucun</span>
                                                    {% endif %}
                                                </td>
                                            </tr>
                                        {% endfor %}

                                        {# Ligne de total par jour #}
                                        <tr class="table-total-row">
                                            {% if groupe.tache_terminee|length <= 0 %}
                                                <td class="align-middle">{{ groupe.date }}</td>
                                            {% endif %}
                                            <td colspan="2" class="text-end">Total</td>
                                            <td class="align-middle">{{ groupe.total_duree }}</td>
                                            <td colspan="2"></td>
                                        </tr>
                                    {% endfor %}

                                    {# Ligne total semaine #}
                                    <tr class="table-total-row">
                                        <td colspan="2" class="text-end">Total semaine</td>
                                        <td class="align-middle">{{ taches.total }}</td>
                                        <td colspan="2"></td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-5"> {# Marge plus grande au-dessus du bouton Exporter #}
            <div class="col-12 text-center">
                <button type="button" class="btn btn-secondary" id="exportButton">Exporter-pdf</button>
                <button type="button" class="btn btn-primary" id="exportButton_excel">Exporter-excel</button>
            </div>
        </div>
        <h2>Representation graphique</h2>
        <div class="row mt-5">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title text-center">Évolution des temps par jour</h5>
                        <canvas id="rapportChart" height="120"></canvas>
                    </div>
                </div>
            </div>
        </div>
        {% block page_content %}{% endblock %}
    </main>

<script>
    // Récupération des données envoyées par Symfony
    let labels = {{ taches.details|map(groupe => groupe.date)|json_encode|raw }};
    console.log(labels);
    let data   = {{ taches.details|map(groupe => groupe.total_duree)|json_encode|raw }};
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Bootstrap JS CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
    {% block javascripts %}{% endblock %}

    <script>
        // document.addEventListener('DOMContentLoaded', function() {
        //     const filterButton = document.getElementById('filterButton');
        //     const exportButton = document.getElementById('exportButton');

        //     filterButton.addEventListener('click', function() {
        //         const startDate = document.getElementById('startDate').value;
        //         const endDate = document.getElementById('endDate').value;
        //         const activityType = document.getElementById('activityType').value;

        //         console.log('Filtrage déclenché avec les valeurs :');
        //         console.log('Date de début:', startDate);
        //         console.log('Date de fin:', endDate);
        //         console.log('Type d\'activité:', activityType);

        //         // Ici, vous intégrerez votre logique de filtrage réelle.
        //         // Par exemple, une requête Fetch API vers votre backend Symfony
        //         // pour récupérer les données filtrées et mettre à jour le tableau.
        //     });

        //     exportButton.addEventListener('click', function() {
        //         console.log('Bouton Exporter cliqué.');
        //         // Ici, vous intégrerez votre logique d'exportation.
        //         // Par exemple, générer un fichier CSV ou PDF à partir des données du tableau.
        //     });
        // });

document.querySelectorAll('.btn-download').forEach(btn => {
    btn.addEventListener('click', function() {
        const url = this.dataset.url;
        const filename = this.dataset.filename || 'justificatif';

        fetch(url)
            .then(resp => {
                if (!resp.ok) throw new Error('Aucun justificatif trouvé.');
                return resp.blob();
            })
            .then(blob => {
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = filename; // Nom réel du fichier
                document.body.appendChild(link); // Nécessaire pour Firefox
                link.click();
                link.remove();
                URL.revokeObjectURL(link.href);
            })
            .catch(err => alert(err.message));
    });
});

let debut = {{ debut|json_encode|default('null')|raw }};
let fin   = {{ fin|json_encode|default('null')|raw }};

const urlPdf   = "{{ path('rapport_export_pdf') }}?debut=" + (debut !== null ? encodeURIComponent(debut) : 'null') + "&fin=" + (fin !== null ? encodeURIComponent(fin) : 'null');
const urlExcel = "{{ path('rapport_export_excel') }}?debut=" + (debut !== null ? encodeURIComponent(debut) : 'null') + "&fin=" + (fin !== null ? encodeURIComponent(fin) : 'null');

document.getElementById('exportButton').addEventListener('click', function () {
    fetch(urlPdf)
        .then(resp => {
            if (!resp.ok) throw new Error("Erreur lors de la génération du PDF.");
            return resp.blob();
        })
        .then(blob => {
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "rapport.pdf";
            document.body.appendChild(link);
            link.click();
            link.remove();
            URL.revokeObjectURL(link.href);
        })
        .catch(err => alert(err.message));
});

document.getElementById('exportButton_excel').addEventListener('click', function () {
    fetch(urlExcel)
        .then(resp => {
            if (!resp.ok) throw new Error("Erreur lors de la génération du fichier Excel.");
            return resp.blob();
        })
        .then(blob => {
            const link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "rapport.xlsx";
            document.body.appendChild(link);
            link.click();
            link.remove();
            URL.revokeObjectURL(link.href);
        })
        .catch(err => alert(err.message));
});


const ctx = document.getElementById('rapportChart').getContext('2d');

new Chart(ctx, {
    type: 'line',
    data: {
        labels: labels, // Les dates
        datasets: [{
            label: 'Durée totale (heures)', // ou minutes selon ton modèle
            data: data,
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            fill: true,
            tension: 0.3, // courbe arrondie
            pointRadius: 5,
            pointHoverRadius: 7
        }]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                display: true,
                position: 'top',
            },
            tooltip: {
                mode: 'index',
                intersect: false,
            }
        },
        interaction: {
            mode: 'nearest',
            axis: 'x',
            intersect: false
        },
        scales: {
            x: {
                title: {
                    display: true,
                    text: 'Date'
                }
            },
            y: {
                title: {
                    display: true,
                    text: 'Durée totale'
                },
                beginAtZero: true
            }
        }
    }
});


    </script>
</body>
</html>
